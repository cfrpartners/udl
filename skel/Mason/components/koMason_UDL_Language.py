# Komodo Mason language service.
#
# Generated by 'luddite.py' on Thu Jul  5 12:35:21 2007.
#

import logging
from koXMLLanguageBase import koHTMLLanguageBase


log = logging.getLogger("koMasonLanguage")
# log.setLevel(logging.DEBUG)


def registerLanguage(registry):
    log.debug("Registering language Mason")
    registry.registerLanguage(KoMasonLanguage())


class KoMasonLanguage(koHTMLLanguageBase):
    name = "Mason"
    lexresLangName = "Mason"
    _reg_desc_ = "%s Language" % name
    _reg_contractid_ = "@activestate.com/koLanguage?language=%s;1" % name
    _reg_clsid_ = "{5e69ecf0-525e-11db-82d8-000d935d3368}"
    defaultExtension = '.mason.html'

    lang_from_udl_family = {'CSL': 'JavaScript', 'TPL': 'Mason', 'M': 'HTML', 'CSS': 'CSS', 'SSL': 'Perl'}

    def __init__(self):
        koHTMLLanguageBase.__init__(self)
        self.matchingSoftChars[" "] = ("%", self.softchar_accept_bracket_percent_space)

    def softchar_accept_bracket_percent_space(self, scimoz, pos, style_info, candidate):
        """Look for |<%_, where these three chars are styled to indicate
        a start-perl tag, and if we find them provide the closing part.
        """
        return self.softchar_accept_styled_chars(
            scimoz, pos, style_info, candidate,
            {'curr_style' : scimoz.SCE_UDL_TPL_DEFAULT,
             'styled_chars' : [
                    (scimoz.SCE_UDL_TPL_OPERATOR, ord("%")),
                    (scimoz.SCE_UDL_TPL_OPERATOR, ord("<"))
                ]
            })
